---
import MainLayout from '../../layouts/MainLayout.astro';
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import { formatDate } from '../../utils';

export async function getStaticPaths() {
    const allBlogArticles: CollectionEntry<'blog'>[] =
        await getCollection('blog');
    return allBlogArticles.map((entry) => ({
        params: {
            slug: entry.slug,
        },
        props: { entry },
    }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

import { Image } from 'astro:assets';
import { imageMap } from '../../utils/imgMap';

const image = imageMap[entry.data.image as keyof typeof imageMap];

//const myImage = import('../' + `${entry.data.image}`);
---

<MainLayout>
    <!-- <h1>{entry.data.title}</h1> -->
    <a
        href="/articles"
        class="mt-20 inline-block bg-gray-100 p-2 mb-6 hover:bg-indigo-500 hover:text-white"
        >Retour aux articles</a
    >
    <article>
        <h1 class="text-4xl font-bold mb-2">
            {entry.data.title}
        </h1>
        <h3 class="text-lg mb-2">
            Ã‰crit par {entry.data.author} le {formatDate(entry.data.pubDate)}
        </h3>
        <div class="flex flex-wrap gap-2 mb-6">
            {
                (entry.data.tags ?? []).map((tag: string, index: number) => (
                    <span
                        class={
                            index % 2 === 0
                                ? 'px-2 py-1 bg-green-500 text-white rounded-full text-xs hover:opacity-90'
                                : 'px-2 py-1 bg-indigo-500 text-white rounded-full text-xs hover:opacity-90'
                        }
                    >
                        <a href={'#' + tag}>{tag}</a>
                    </span>
                ))
            }
        </div>
        <div class="flex justify-center items-center mb-6">
            <Image
                src={image}
                title={entry.data.imgageTitle}
                alt={entry.data.alt}
                width={Number(entry.data.width)}
                height={Number(entry.data.height)}
                loading="lazy"
                class="h-auto rounded-xl"
            />
        </div>
        <Content />
    </article>
</MainLayout>

<style is:global>
    p {
        margin: 20px 0;
    }
    h1 {
        margin: 22px 0;
        font-size: 2rem;
        text-transform: uppercase;
        color: #162c62;
        font-family: 'Montserrat', sans-serif;
    }
    h2 {
        margin: 20px 0;
        font-size: 1.8rem;
    }
    h3 {
        color: blue;
    }
</style>
<!-- sizes="(max-width: 768px) 100vw, 600px" -->
